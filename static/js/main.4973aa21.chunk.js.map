{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","isActive","classNames","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","people","slug","useParams","cn","sex","name","born","died","some","human","motherName","mother","fatherName","father","PeopleTable","map","PeoplePage","useState","setPeople","error","setError","loading","setLoading","useEffect","preparedPeople","find","catch","finally","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4973aa21.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => {\n  const getLinkClass = (({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  ));\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={getLinkClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {people.some(human => human.name === person.motherName) ? (\n          <Link className=\"has-text-danger\" to={`/people/${person.mother?.slug}`}>{person.motherName}</Link>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n      <td>\n        {people.some(human => human.name === person.fatherName) ? (\n          <Link to={`/people/${person.father?.slug}`}>{person.fatherName || '-'}</Link>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonLink\n          key={person.slug}\n          person={person}\n          people={people}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPeople()\n      .then(response => {\n        const preparedPeople: Person[] = response.map(human => (\n          {\n            ...human,\n            mother: response.find(({ name }) => name === human.motherName),\n            father: response.find(({ name }) => name === human.fatherName),\n          }\n        ));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => {\n        setError(true);\n        // setPeople([]);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading && (<Loader />)}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !loading && !error && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length !== 0 && <PeopleTable people={people} />}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" />\n        </Route>\n        <Route path=\"home\" element={<Navigate replace to=\"..\" />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}